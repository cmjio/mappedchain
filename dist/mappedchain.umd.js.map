{"version":3,"file":"mappedchain.umd.js","sources":["../src/get.ts","../src/chain.ts","../src/mapper.ts"],"sourcesContent":["const get = (object: any, path: Array<any> | String, value?: any) => {\n  if (!path) return undefined;\n  const pathArray = Array.isArray(path)\n    ? path\n    : path.split(/[,[\\].]/g).filter(Boolean);\n  return (\n    pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object) || value\n  );\n};\n\nexport default get;\n","// const get = require('./get');\nimport get from './get'\n\nconst chainFactory = (models) => {\n  const chain = {\n    models: () => [...models],\n    get: (prop, source, ...middleware) => {\n      let sortedModels;\n      let value;\n      const isSourceString = typeof source === 'string';\n      const isSourceArray = Array.isArray(source)\n      const validMiddleware = middleware.filter(m => typeof m === 'function')\n\n      const runMiddleware = (initial) => validMiddleware.reduce((prev, curr) => curr(prev), initial)\n\n      if (typeof prop !== 'string') {\n        return;\n      }\n\n      if (source !== undefined && !isSourceString && !isSourceArray) {\n        return;\n      }\n\n      if (isSourceString) {\n        const model = models.find(model => model.__source__ === source);\n        if (!model) {\n          return\n        }\n\n        return runMiddleware(get(model, prop))\n      }\n\n      if (isSourceArray) {\n        sortedModels = source.map(src => models.find(model => model.__source__ === src))\n      }\n\n      if (!sortedModels) {\n        sortedModels = models;\n      }\n\n      sortedModels.some(model => {\n        value = get(model, prop);\n        return value !== undefined;\n      })\n\n      return runMiddleware(value);\n    }\n  }\n  return chain;\n}\n\nexport default (...mappedObjs) => {\n  const sources = []\n  const isValid = mappedObjs.every((obj) => {\n    const isMapped = obj.__isMapped__;\n    const src = obj.__source__;\n    const isDifferent = sources.indexOf(obj.__source__) === -1;\n\n    sources.push(src)\n\n    return (isMapped && isDifferent)\n  })\n\n  if (!isValid) {\n    return null\n  }\n\n  const chain = chainFactory(mappedObjs)\n\n  return chain\n}","import get from \"./get\";\n\ninterface IMapper extends Function {\n  source: String;\n  type?: String;\n}\n\nconst mapperFactory = (raw: any, mapper: IMapper, opts?: object) => {\n  const aliases = {};\n  let mapped;\n\n  const alias = (prop: string) => {\n    return {\n      to: (key: string | Function) => {\n        aliases[prop] = key;\n      },\n    };\n  };\n\n  function getProp(property: string) {\n    let returnValue;\n\n    if (!property) {\n      return;\n    }\n\n    const key = aliases[property];\n\n    if (!key) {\n      return;\n    }\n\n    try {\n      returnValue =\n        typeof key === \"function\"\n          ? key.call(this, raw, property)\n          : get(raw, key, undefined);\n    } catch (e) {\n      console.error(e);\n      throw new Error(e);\n    }\n\n    return returnValue;\n  }\n\n  mapper(alias, raw);\n\n  mapped = Object.create(\n    {},\n    {\n      __isMapped__: {\n        enumerable: true,\n        get: () => true,\n        set: () => {},\n      },\n      __raw__: {\n        enumerable: true,\n        get: () => raw,\n      },\n      __source__: {\n        enumerable: true,\n        get: () => mapper.source,\n        set: () => {},\n      },\n    }\n  );\n\n  const props = Object.keys(aliases).reduce((prev, curr) => {\n    prev[curr] = {\n      get: getProp.bind(mapped, curr),\n      enumerable: true,\n    };\n\n    return prev;\n  }, {});\n\n  Object.defineProperties(mapped, props);\n  return mapped;\n};\n\nexport default (raw: object, mapper: IMapper, opts?: any) => {\n  let mapped;\n\n  if (raw === undefined) {\n    return null;\n  }\n\n  if (typeof mapper !== \"function\") {\n    return null;\n  }\n\n  if (!mapper.source) {\n    return null;\n  }\n\n  mapped = mapperFactory(raw, mapper, opts);\n\n  return mapped;\n};\n"],"names":["get","object","path","value","Array","isArray","split","filter","Boolean","reduce","prevObj","key","chainFactory","models","prop","source","sortedModels","isSourceString","isSourceArray","middleware","validMiddleware","m","runMiddleware","initial","prev","curr","undefined","model","find","__source__","map","src","some","sources","mappedObjs","isValid","every","obj","isMapped","__isMapped__","isDifferent","indexOf","push","chain","raw","mapper","opts","mapped","aliases","getProp","property","returnValue","call","this","e","console","error","Error","to","Object","create","enumerable","set","__raw__","props","keys","bind","defineProperties","mapperFactory"],"mappings":"6BAAA,IAAMA,EAAM,SAACC,EAAaC,EAA2BC,MAC9CD,SACaE,MAAMC,QAAQH,GAC5BA,EACAA,EAAKI,MAAM,YAAYC,OAAOC,UAEtBC,QAAO,SAACC,EAASC,UAAQD,GAAWA,EAAQC,KAAMV,IAAWE,GCHrES,EAAe,SAACC,SACN,CACZA,OAAQ,2BAAUA,IAClBb,IAAK,SAACc,EAAMC,WACNC,EACAb,EACEc,EAAmC,iBAAXF,EACxBG,EAAgBd,MAAMC,QAAQU,sBAJfI,mCAAAA,wBAKfC,EAAkBD,EAAWZ,QAAO,SAAAc,SAAkB,mBAANA,KAEhDC,EAAgB,SAACC,UAAYH,EAAgBX,QAAO,SAACe,EAAMC,UAASA,EAAKD,KAAOD,OAElE,iBAATT,SAIIY,IAAXX,GAAyBE,GAAmBC,OAI5CD,EAAgB,KACZU,EAAQd,EAAOe,MAAK,SAAAD,UAASA,EAAME,IAAed,SACnDY,gBAIEL,EAActB,EAAI2B,EAAOb,WAG9BI,IACFF,EAAeD,EAAOe,KAAI,SAAAC,UAAOlB,EAAOe,MAAK,SAAAD,UAASA,EAAME,IAAeE,SAGxEf,IACHA,EAAeH,GAGjBG,EAAagB,MAAK,SAAAL,eAECD,KADjBvB,EAAQH,EAAI2B,EAAOb,OAIdQ,EAAcnB,kCAOnB8B,EAAU,sBADCC,2BAAAA,sBAEXC,EAAUD,EAAWE,OAAM,SAACC,OAC1BC,EAAWD,EAAIE,EACfR,EAAMM,EAAIR,EACVW,GAAmD,IAArCP,EAAQQ,QAAQJ,EAAIR,UAExCI,EAAQS,KAAKX,GAELO,GAAYE,SAGjBL,SACI,SAGHQ,EAAQ/B,EAAasB,UAEpBS,6BCWOC,EAAaC,EAAiBC,eAGhCpB,IAARkB,GAIkB,mBAAXC,EAHF,KAOJA,EAAO9B,OApFQ,SAAC6B,EAAUC,EAAiBC,OAE5CC,EADEC,EAAU,YAWPC,EAAQC,OACXC,KAECD,OAICvC,EAAMqC,EAAQE,MAEfvC,OAKHwC,EACiB,mBAARxC,EACHA,EAAIyC,KAAKC,KAAMT,EAAKM,GACpBlD,EAAI4C,EAAKjC,OAAKe,GACpB,MAAO4B,SACPC,QAAQC,MAAMF,GACR,IAAIG,MAAMH,UAGXH,IAGTN,GAlCc,SAAC/B,SACN,CACL4C,GAAI,SAAC/C,GACHqC,EAAQlC,GAAQH,MA+BRiC,GAEdG,EAASY,OAAOC,OACd,GACA,CACErB,EAAc,CACZsB,YAAY,EACZ7D,IAAK,kBAAM,GACX8D,IAAK,cAEPC,EAAS,CACPF,YAAY,EACZ7D,IAAK,kBAAM4C,IAEbf,EAAY,CACVgC,YAAY,EACZ7D,IAAK,kBAAM6C,EAAO9B,QAClB+C,IAAK,oBAKLE,EAAQL,OAAOM,KAAKjB,GAASvC,QAAO,SAACe,EAAMC,UAC/CD,EAAKC,GAAQ,CACXzB,IAAKiD,EAAQiB,KAAKnB,EAAQtB,GAC1BoC,YAAY,GAGPrC,IACN,WAEHmC,OAAOQ,iBAAiBpB,EAAQiB,GACzBjB,EAkBEqB,CAAcxB,EAAKC,GAHnB"}