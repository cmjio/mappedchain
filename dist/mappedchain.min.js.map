{"version":3,"file":"mappedchain.min.js","sources":["../src/get.js","../src/mapper.js","../src/chain.js","../src/index.js"],"sourcesContent":["const get = (object, path, value) => {\n  if (!path) return undefined\n  const pathArray = Array.isArray(path)\n    ? path\n    : path.split(/[,[\\].]/g).filter(Boolean)\n  return (\n    pathArray.reduce((prevObj, key) => prevObj && prevObj[key], object) || value\n  )\n}\n\nmodule.exports = get;","const get = require('./get');\n\nconst mapperFactory = (raw, mapper, opts) => {\n  const aliases = {}\n  let mapped;\n\n  const alias = (prop) => {\n    return {\n      to: (key) => {\n        aliases[prop] = key;\n      }\n    }\n  }\n\n\n  function _get(property) {\n    let returnValue;\n\n    if (!property) {\n      return;\n    }\n\n    key = aliases[property];\n\n    if (!key) {\n      return;\n    }\n\n    try {\n      returnValue = (typeof key === 'function') ? key.call(this, raw, property) : get(raw, key);\n    } catch (e) {\n      console.error(e);\n      throw new Error(e);\n    }\n\n    return returnValue\n  }\n\n  mapper(alias, raw)\n\n  mapped = Object.create({}, {\n    __isMapped__: {\n      enumerable: true,\n      get: () => true,\n      set: () => { }\n    },\n    __raw__: {\n      enumerable: true,\n      get: () => raw,\n    },\n    __source__: {\n      enumerable: true,\n      get: () => mapper.source,\n      set: () => { }\n    }\n  })\n\n\n  const props = Object.keys(aliases).reduce((prev, curr) => {\n    prev[curr] = {\n      get: _get.bind(mapped, curr),\n      enumerable: true\n    }\n\n    return prev\n  }, {});\n\n  Object.defineProperties(mapped, props)\n  return mapped;\n}\n\n\n\nexports.create = (raw, mapper, opts) => {\n  let mapped;\n\n  if (raw === undefined) {\n    return null\n  }\n\n  if (typeof mapper !== 'function') {\n    return null;\n  }\n\n  if (!mapper.source) {\n    return null;\n  }\n\n  mapped = mapperFactory(raw, mapper, opts)\n\n  return mapped\n}\n","const get = require('./get');\n\nconst chainFactory = (models) => {\n  const chain = {\n    models: () => [...models],\n    get: (prop, source, ...middleware) => {\n      let sortedModels;\n      let value;\n      const isSourceString = typeof source === 'string';\n      const isSourceArray = Array.isArray(source)\n      const validMiddleware = middleware.filter(m => typeof m === 'function')\n\n      const runMiddleware = (initial) => validMiddleware.reduce((prev, curr) => curr(prev), initial)\n\n      if (typeof prop !== 'string') {\n        return;\n      }\n\n      if (source !== undefined && !isSourceString && !isSourceArray) {\n        return;\n      }\n\n      if (isSourceString) {\n        const model = models.find(model => model.__source__ === source);\n        if (!model) {\n          return\n        }\n\n        return runMiddleware(get(model, prop))\n      }\n\n      if (isSourceArray) {\n        sortedModels = source.map(src => models.find(model => model.__source__ === src))\n      }\n\n      if (!sortedModels) {\n        sortedModels = models;\n      }\n\n      sortedModels.some(model => {\n        value = get(model, prop);\n        return value !== undefined;\n      })\n\n      return runMiddleware(value);\n    }\n  }\n  return chain;\n}\n\nexports.create = (...mappedObjs) => {\n  const sources = []\n  const isValid = mappedObjs.every((obj) => {\n    const isMapped = obj.__isMapped__;\n    const src = obj.__source__;\n    const isDifferent = sources.indexOf(obj.__source__) === -1;\n\n    sources.push(src)\n\n    return (isMapped && isDifferent)\n  })\n\n  if (!isValid) {\n    return null\n  }\n\n  const chain = chainFactory(mappedObjs)\n\n  return chain\n}","const mapper = require('./mapper')\nconst chain = require('./chain')\n\nexports.mapper = mapper;\nexports.create = chain.create;"],"names":["object","path","value","Array","isArray","split","filter","Boolean","reduce","prevObj","key","raw","mapper","opts","undefined","source","mapped","aliases","_get","property","returnValue","call","this","get","e","console","error","Error","prop","to","Object","create","__isMapped__","enumerable","set","__raw__","__source__","props","keys","prev","curr","bind","defineProperties","mapperFactory","require","exports","sources","mappedObjs","models","every","obj","isMapped","src","isDifferent","indexOf","push","sortedModels","isSourceString","isSourceArray","middleware","validMiddleware","m","runMiddleware","initial","model","find","map","some"],"mappings":";;;;;wMAAA,MAAY,SAACA,EAAQC,EAAMC,MACpBD,SACaE,MAAMC,QAAQH,GAC5BA,EACAA,EAAKI,MAAM,YAAYC,OAAOC,UAEtBC,OAAO,SAACC,EAASC,UAAQD,GAAWA,EAAQC,IAAMV,IAAWE,aCmE1D,SAACS,EAAKC,EAAQC,eAGjBC,IAARH,EACK,KAGa,mBAAXC,EACF,KAGJA,EAAOG,OAlFQ,SAACJ,EAAKC,EAAQC,OAE9BG,EADEC,EAAU,YAYPC,EAAKC,OACRC,KAECD,IAILT,IAAMO,EAAQE,GAETT,UAKHU,EAA8B,mBAARV,IAAsBA,IAAIW,KAAKC,KAAMX,EAAKQ,GAAYI,EAAIZ,EAAKD,KACrF,MAAOc,SACPC,QAAQC,MAAMF,GACR,IAAIG,MAAMH,UAGXJ,GAGTR,EAhCc,SAACgB,SACN,CACLC,GAAI,SAACnB,GACHO,EAAQW,GAAQlB,KA6BRC,GAEdK,EAASc,OAAOC,OAAO,GAAI,CACzBC,aAAc,CACZC,YAAY,EACZV,IAAK,kBAAM,GACXW,IAAK,cAEPC,QAAS,CACPF,YAAY,EACZV,IAAK,kBAAMZ,IAEbyB,WAAY,CACVH,YAAY,EACZV,IAAK,kBAAMX,EAAOG,QAClBmB,IAAK,oBAKHG,EAAQP,OAAOQ,KAAKrB,GAAST,OAAO,SAAC+B,EAAMC,UAC/CD,EAAKC,GAAQ,CACXjB,IAAKL,EAAKuB,KAAKzB,EAAQwB,GACvBP,YAAY,GAGPM,GACN,WAEHT,OAAOY,iBAAiB1B,EAAQqB,GACzBrB,EAoBE2B,CAAchC,EAAKC,GAHnB,ivBCrFX,IAAMW,EAAMqB,QAAQ,SAkDpBC,EAAQd,OAAS,mBACTe,EAAU,sBADGC,2BAAAA,sBAhDCC,SAkDJD,EAAWE,MAAM,SAACC,OAC1BC,EAAWD,EAAIlB,aACfoB,EAAMF,EAAId,WACViB,GAAmD,IAArCP,EAAQQ,QAAQJ,EAAId,mBAExCU,EAAQS,KAAKH,GAELD,GAAYE,KAzDFL,EAgEOD,EA/Db,CACZC,OAAQ,oBAAUA,IAClBzB,IAAK,SAACK,EAAMb,WACNyC,EACAtD,EACEuD,EAAmC,iBAAX1C,EACxB2C,EAAgBvD,MAAMC,QAAQW,sBAJf4C,mCAAAA,wBAKfC,EAAkBD,EAAWrD,OAAO,SAAAuD,SAAkB,mBAANA,IAEhDC,EAAgB,SAACC,UAAYH,EAAgBpD,OAAO,SAAC+B,EAAMC,UAASA,EAAKD,IAAOwB,OAElE,iBAATnC,SAIId,IAAXC,GAAyB0C,GAAmBC,OAI5CD,EAAgB,KACZO,EAAQhB,EAAOiB,KAAK,SAAAD,UAASA,EAAM5B,aAAerB,QACnDiD,gBAIEF,EAAcvC,EAAIyC,EAAOpC,WAG9B8B,IACFF,EAAezC,EAAOmD,IAAI,SAAAd,UAAOJ,EAAOiB,KAAK,SAAAD,UAASA,EAAM5B,aAAegB,OAGxEI,IACHA,EAAeR,GAGjBQ,EAAaW,KAAK,SAAAH,eAEClD,KADjBZ,EAAQqB,EAAIyC,EAAOpC,MAIdkC,EAAc5D,OAmBhB,cC5DMU,wDACMmB"}